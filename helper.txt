Anotações de algumas funções

Explicação:
Tudo aquilo que está entre "[" e "]" não são valores fíxos, ou seja, dependendo do caso, pode alternar entre o nome de uma classe, uma variável, constante etc... 

=================================================================================================
typeof [conteudo] // Obtém o tipo de dado.
typeof 500 // number
typeof "500" // string
=================================================================================================

=================================================================================================
[Tipo].is[Tipo]([conteudo]) // Retorna um boleano dizendo se x variável equivale ao tipo mencionado
Number.isInteger(10) // true
=================================================================================================

=================================================================================================
[conteudo].toFixed([number]) // Define a quantidade de casas decimais depois da vírgula, ou seja, ao substituir "[number]" por um número inteiro, será a quantidade de casas decimais pós vírgula.
10.500.toFixed(2) // 10.50
=================================================================================================

=================================================================================================
([conteudo]).toString() // Converte qualquer outro tipo de dado (Number, Boolean...) para uma string.

Em alguns cenários, é necessário por o valor entre "(" e ")" para funcionar, como por exemplo dados do tipo Number, segue abaixo

(500).toString() // "500"
true.toString() // "true"

(500).toString(2) // "111110100"

Parâmetros toString()
2 == binário
=================================================================================================

=================================================================================================
[string].charAt([posicao]) // Obtém o conteúdo que está em determinada posição de uma string, e se não exister, não retorna nada, ou seja, ''.

"JavaScript".charAt(0) // 'J'
"JavaScript".charAt(500) // ''
"JavaScript".charAt(-1) // ''
=================================================================================================

=================================================================================================
[string].charCodeAt([posicao]) // Obtém o valor em unicode que está em determinada posição de uma string, e se não exister, retorna que não é um número, ou seja, NaN.

"JavaScript".charCodeAt(0) // 74
"JavaScript".charCodeAt(500) // NaN
"JavaScript".charCodeAt(-1) // NaN
=================================================================================================

=================================================================================================
[string].indexOf([posicao]) // Extrai o valor que está em determinada posição da string

"JavaScript".indexOf(0) // 'J'
=================================================================================================

=================================================================================================
[string].substring([inicio], [fim]) // Extrai o valor que está no range determinado entre [inicio e [fim] da string, sendo que o parâmetro [fim] é opcional

"JavaScript".substring(0) // 'JavaScript'
"JavaScript".substring(1) // 'avaScript'
"JavaScript".substring(0, 1) // 'J'
=================================================================================================

=================================================================================================
[string].concat([valor]) // Concatena (junta) o valor da esquerda ([string]) com o valor da direita, ou seja, o parâmetro da função concat ([valor])

"Aprendendo ".concat('Javascript') // 'Aprendendo JavaScript'
'O'.concat("i") // Oi
=================================================================================================

=================================================================================================
[string].replace([valorAtual], [valorDesejado]) // Substitui o valor atual pelo valor desejado, ou seja:

'Kaio'.replace('K', 'C') // Caio
=================================================================================================

=================================================================================================
[string].split([valor]) // Quebra a string através de um valor ([valor]) e retorna um array

'Banana,Maçã,Pêra'.split(',') // ['Banana', 'Maçã', 'Pêra']
=================================================================================================











